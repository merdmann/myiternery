{"ast":null,"code":"var _jsxFileName = \"/home/merdmann/deveop/myiternery/client/src/pages/itineraries.js\";\nimport React, { Component } from \"react\"; //import { BrowserRouter, Route, Link } from \"react-router-dom\";\n//import { Container, Row, Col } from 'react-grid-system';\n\nimport { Composition } from 'atomic-layout'; // Define layout areas as a string\n\nconst areasMobile = \"\\n  thumbnail\\n  header\\n  footer\\n\"; // Responsive areas? Built-in!\n\nconst areasTablet = \"\\n  thumbnail header\\n  thumbnail footer\\n\";\n\nconst Iternaries = ({\n  title,\n  imageUrl,\n  actions\n}) => React.createElement(Composition, {\n  areas: areasMobile,\n  areasMd: areasTablet,\n  gutter: 20,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, ({\n  Thumbnail,\n  Header,\n  Footer\n}) => React.createElement(React.Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, React.createElement(Thumbnail, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: imageUrl,\n  alt: title,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n})), React.createElement(Header, {\n  as: \"h3\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, title), React.createElement(Footer, {\n  padding: 10,\n  paddingMd: 20,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, actions)));\n\nexport default Iternaries;\n/* last line */","map":{"version":3,"sources":["/home/merdmann/deveop/myiternery/client/src/pages/itineraries.js"],"names":["React","Component","Composition","areasMobile","areasTablet","Iternaries","title","imageUrl","actions","Thumbnail","Header","Footer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AAEA,SAASC,WAAT,QAA4B,eAA5B,C,CAEA;;AACA,MAAMC,WAAW,wCAAjB,C,CAMA;;AACA,MAAMC,WAAW,+CAAjB;;AAKA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KACjB,oBAAC,WAAD;AAAa,EAAA,KAAK,EAAEL,WAApB;AAAiC,EAAA,OAAO,EAAEC,WAA1C;AAAuD,EAAA,MAAM,EAAE,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEG,CAAC;AAAEK,EAAAA,SAAF;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA;AAArB,CAAD,KACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEE;AAAK,EAAA,GAAG,EAAEJ,QAAV;AAAoB,EAAA,GAAG,EAAED,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF,CADF,EAME,oBAAC,MAAD;AAAQ,EAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAiBA,KAAjB,CANF,EAQE,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAE,EAAjB;AAAqB,EAAA,SAAS,EAAE,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGE,OADH,CARF,CAHJ,CADF;;AAoBA,eAAeH,UAAf;AAEA","sourcesContent":["import React, { Component } from \"react\";\n//import { BrowserRouter, Route, Link } from \"react-router-dom\";\n//import { Container, Row, Col } from 'react-grid-system';\n\nimport { Composition } from 'atomic-layout'\n \n// Define layout areas as a string\nconst areasMobile = `\n  thumbnail\n  header\n  footer\n`\n \n// Responsive areas? Built-in!\nconst areasTablet = `\n  thumbnail header\n  thumbnail footer\n`\n \nconst Iternaries = ({ title, imageUrl, actions }) => (\n  <Composition areas={areasMobile} areasMd={areasTablet} gutter={20}>\n    {/* Get React components based on provided areas */}\n    {({ Thumbnail, Header, Footer }) => (\n      <React.Fragment>\n        <Thumbnail>\n          {/* Render anything, including another Composition */}\n          <img src={imageUrl} alt={title} />\n        </Thumbnail>\n        {/* Preserve semantics with polymorphic prop */}\n        <Header as=\"h3\">{title}</Header>\n        {/* Responsive props: just suffix with a breakpoint name */}\n        <Footer padding={10} paddingMd={20}>\n          {actions}\n        </Footer>\n      </React.Fragment>\n    )}\n  </Composition>\n)\n \nexport default Iternaries;\n\n/* last line */"]},"metadata":{},"sourceType":"module"}