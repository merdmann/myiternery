{"ast":null,"code":"var _jsxFileName = \"/home/merdmann/deveop/myiternery/client/src/pages/itineraries.js\";\nimport React from \"react\";\nimport { Component } from \"react\";\nimport Activity from \"../components/activity\";\nimport \"../pages/itinararies.css\";\nimport Carousel from 'react-images';\nimport Img from 'react-images';\nimport Collapsible from 'react-collapsible';\n/* \n * This comonent is expected to take the city name from http route and tto \n * list all iternararies for this city\n */\n\nclass Itinararies extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      itinararies: null,\n      urls: null\n    };\n  }\n  /*\n  * Create the landmrk urls\n  */\n\n\n  createUrls() {\n    let landmarks = this.state.itinararies.map(e => e.landmarks);\n    let urls = [];\n    landmarks.map(lm => {\n      return lm.forEach(element => {\n        urls.push({\n          src: element.url\n        });\n      });\n    });\n    console.log(landmarks);\n    console.log(urls);\n    this.setState({\n      urls\n    });\n  }\n\n  renderItinary(it) {\n    return React.createElement(\"div\", {\n      className: itinararyBox,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, it.creator.name), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, it.description), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"liked \", it.liked), React.createElement(\"span\", {\n      className: \"infoText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Likes:\", it.liked), React.createElement(\"span\", {\n      className: styles.infoText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Duration: \", it.duration, \"hrs \"), React.createElement(\"span\", {\n      className: styles.infoText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Cost: \", it.cost, \"$\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: styles.infoText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, it.activity.map(t => React.createElement(\"span\", {\n      className: \"tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"#\" + t))), React.createElement(\"div\", {\n      vclassName: styles.infoText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, it.landmarks.map(l => React.createElement(\"span\", {\n      className: \"tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, l.name))), React.createElement(Collapsible, {\n      trigger: \"view all\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.state.urls && React.createElement(Carousel, {\n      className: \"infoText\",\n      views: this.state.urls,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })));\n  }\n\n  render() {\n    console.log(this.state.itinararies);\n    return this.state.itinararies && this.state.itinararies.map(it => this.renderItinary(it));\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/api/tinerary/search?city=\" + this.props.match.params.city).then(response => response.json()).then(data => {\n      console.log(data);\n      this.setState({\n        itinararies: data\n      });\n      this.createUrls();\n    });\n  }\n\n}\n/* class */\n\n\nexport default Itinararies;\n/* last line */","map":{"version":3,"sources":["/home/merdmann/deveop/myiternery/client/src/pages/itineraries.js"],"names":["React","Component","Activity","Carousel","Img","Collapsible","Itinararies","constructor","props","state","itinararies","urls","createUrls","landmarks","map","e","lm","forEach","element","push","src","url","console","log","setState","renderItinary","it","itinararyBox","creator","name","description","liked","styles","infoText","duration","cost","activity","t","l","render","componentDidMount","fetch","match","params","city","then","response","json","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAO,0BAAP;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AAGA;;;;;AAIA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAClCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE,IAAd;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;AACA;;;;;AAGDC,EAAAA,UAAU,GAAE;AACV,QAAIC,SAAS,GAAC,KAAKJ,KAAL,CAAWC,WAAX,CAAuBI,GAAvB,CAA2BC,CAAC,IAAIA,CAAC,CAACF,SAAlC,CAAd;AACA,QAAIF,IAAI,GAAG,EAAX;AACAE,IAAAA,SAAS,CAACC,GAAV,CAAcE,EAAE,IAAI;AAAC,aAAOA,EAAE,CAACC,OAAH,CAAWC,OAAO,IAAI;AAC7CP,QAAAA,IAAI,CAACQ,IAAL,CAAU;AAACC,UAAAA,GAAG,EAAEF,OAAO,CAACG;AAAd,SAAV;AACA,OAFuB,CAAP;AAGpB,KAHD;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACA,SAAKa,QAAL,CAAc;AAACb,MAAAA;AAAD,KAAd;AACD;;AAEDc,EAAAA,aAAa,CAACC,EAAD,EAAK;AAChB,WAAQ;AAAK,MAAA,SAAS,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMD,EAAE,CAACE,OAAH,CAAWC,IAAjB,CADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,EAAE,CAACI,WAAR,CAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAaJ,EAAE,CAACK,KAAhB,CAHA,EAIA;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAkCL,EAAE,CAACK,KAArC,CAJA,EAKA;AAAM,MAAA,SAAS,EAAEC,MAAM,CAACC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA6CP,EAAE,CAACQ,QAAhD,SALA,EAMA;AAAM,MAAA,SAAS,EAAEF,MAAM,CAACC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAyCP,EAAE,CAACS,IAA5C,MANA,EAMyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANzD,EAOA;AAAM,MAAA,SAAS,EAAEH,MAAM,CAACC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCP,EAAE,CAACU,QAAH,CAAYtB,GAAZ,CAAgBuB,CAAC,IAAE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,MAAIA,CAA5B,CAAnB,CAAnC,CAPA,EAQA;AAAK,MAAA,UAAU,EAAEL,MAAM,CAACC,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCP,EAAE,CAACb,SAAH,CAAaC,GAAb,CAAkBwB,CAAC,IAAI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwBA,CAAC,CAACT,IAA1B,CAAvB,CAAnC,CARA,EASA,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAC,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACS,KAAKpB,KAAL,CAAWE,IAAX,IAAoB,oBAAC,QAAD;AAAW,MAAA,SAAS,EAAC,UAArB;AAAgC,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD7B,CATA,CAAR;AAaD;;AAED4B,EAAAA,MAAM,GAAG;AACLjB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWC,WAAvB;AACA,WAAO,KAAKD,KAAL,CAAWC,WAAX,IAA0B,KAAKD,KAAL,CAAWC,WAAX,CAAuBI,GAAvB,CAA2BY,EAAE,IAAE,KAAKD,aAAL,CAAmBC,EAAnB,CAA/B,CAAjC;AACH;;AAEDc,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,oDAAoD,KAAKjC,KAAL,CAAWkC,KAAX,CAAiBC,MAAjB,CAAwBC,IAA7E,CAAL,CACGC,IADH,CACQC,QAAQ,IAAGA,QAAQ,CAACC,IAAT,EADnB,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ1B,MAAAA,OAAO,CAACC,GAAR,CAAYyB,IAAZ;AACA,WAAKxB,QAAL,CAAc;AAACd,QAAAA,WAAW,EAAEsC;AAAd,OAAd;AACA,WAAKpC,UAAL;AACD,KANH;AAOD;;AAnDiC;AAoDlC;;;AAEF,eAAeN,WAAf;AACA","sourcesContent":["import React from \"react\";\nimport { Component } from \"react\";\nimport Activity from \"../components/activity\"\nimport \"../pages/itinararies.css\"\nimport Carousel from 'react-images';\nimport Img from 'react-images';\nimport Collapsible from 'react-collapsible';\n \n\n/* \n * This comonent is expected to take the city name from http route and tto \n * list all iternararies for this city\n */\nclass Itinararies extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {itinararies: null, \n      urls: null \n    }\n  }\n   /*\n   * Create the landmrk urls\n   */\n  createUrls(){\n    let landmarks=this.state.itinararies.map(e => e.landmarks)\n    let urls = [] \n    landmarks.map(lm => {return lm.forEach(element => {\n         urls.push({src :element.url})      \n        })\n    })\n    console.log(landmarks)\n    console.log(urls)\n    this.setState({urls})\n  }\n\n  renderItinary(it) {\n    return( <div className={itinararyBox}>\n            <div>{it.creator.name}</div>\n            <h3>{it.description}</h3>\n            <span>liked {it.liked}</span>\n            <span className=\"infoText\">Likes:{it.liked}</span>\n            <span className={styles.infoText}>Duration: {it.duration}hrs </span>\n            <span className={styles.infoText}>Cost: {it.cost}$</span><br></br>\n            <span className={styles.infoText}>{it.activity.map(t=><span className=\"tags\">{\"#\"+t}</span>)}</span>\n            <div vclassName={styles.infoText}>{it.landmarks.map( l => <span className=\"tags\">{l.name}</span>)}</div>\n            <Collapsible trigger=\"view all\" >\n                    {this.state.urls &&  <Carousel  className=\"infoText\" views={this.state.urls}/>}         \n            </Collapsible>\n            </div> );\n  }\n\n  render() {\n      console.log(this.state.itinararies);\n      return(this.state.itinararies && this.state.itinararies.map(it=>this.renderItinary(it)))\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:5000/api/tinerary/search?city=\" + this.props.match.params.city )\n      .then(response =>response.json())\n      .then(data => {\n        console.log(data);\n        this.setState({itinararies: data })\n        this.createUrls()\n      });\n  };\n} /* class */\n\nexport default Itinararies;\n/* last line */ "]},"metadata":{},"sourceType":"module"}