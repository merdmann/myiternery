{"ast":null,"code":"var _jsxFileName = \"/home/merdmann/deveop/myiternery/client/src/pages/itineraries.js\";\nimport React from \"react\";\nimport { Composition } from 'atomic-layout'; // Define layout areas as a string\n\nconst areasMobile = \"\\n  thumbnail\\n  header\\n  footer\\n\"; // Responsive areas? Built-in!\n\nconst areasTablet = \"\\n  thumbnail header\\n  thumbnail footer\\n\";\n\nconst Itineraries = ({\n  title,\n  imageUrl,\n  actions\n}) => React.createElement(Composition, {\n  areas: areasMobile,\n  areasMd: areasTablet,\n  gutter: 20,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, ({\n  Thumbnail,\n  Header,\n  Footer\n}) => React.createElement(React.Fragment, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(Thumbnail, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(\"img\", {\n  src: \"./../icons/public-transport-subway.png\",\n  alt: \"\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n})), React.createElement(Header, {\n  as: \"h1\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, \"h1 Hallo Welt\"), React.createElement(Footer, {\n  padding: 10,\n  paddingMd: 20,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, actions)));\n\nexport default Itineraries;\n/* last line */","map":{"version":3,"sources":["/home/merdmann/deveop/myiternery/client/src/pages/itineraries.js"],"names":["React","Composition","areasMobile","areasTablet","Itineraries","title","imageUrl","actions","Thumbnail","Header","Footer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CAEA;;AACA,MAAMC,WAAW,wCAAjB,C,CAMA;;AACA,MAAMC,WAAW,+CAAjB;;AAKA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,KAClB,oBAAC,WAAD;AAAa,EAAA,KAAK,EAAEL,WAApB;AAAiC,EAAA,OAAO,EAAEC,WAA1C;AAAuD,EAAA,MAAM,EAAE,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEG,CAAC;AAAEK,EAAAA,SAAF;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA;AAArB,CAAD,KACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAK,EAAA,GAAG,EAAC,wCAAT;AAAkD,EAAA,GAAG,EAAC,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,EAIE,oBAAC,MAAD;AAAQ,EAAA,EAAE,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKE,oBAAC,MAAD;AAAQ,EAAA,OAAO,EAAE,EAAjB;AAAqB,EAAA,SAAS,EAAE,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGH,OADH,CALF,CAHJ,CADF;;AAiBA,eAAeH,WAAf;AAEA","sourcesContent":["import React from \"react\";\nimport { Composition } from 'atomic-layout'\n \n// Define layout areas as a string\nconst areasMobile = `\n  thumbnail\n  header\n  footer\n`\n \n// Responsive areas? Built-in!\nconst areasTablet = `\n  thumbnail header\n  thumbnail footer\n`\n\nconst Itineraries = ({ title, imageUrl, actions }) => (\n  <Composition areas={areasMobile} areasMd={areasTablet} gutter={20}>\n    {/* Get React components based on provided areas */}\n    {({ Thumbnail, Header, Footer }) => (\n      <React.Fragment>\n        <Thumbnail>\n          <img src=\"./../icons/public-transport-subway.png\" alt=\"\" />\n        </Thumbnail>\n        <Header as=\"h1\">h1 Hallo Welt</Header>\n        <Footer padding={10} paddingMd={20}>\n          {actions}\n        </Footer>\n      </React.Fragment>\n    )}\n  </Composition>\n)\n \nexport default Itineraries;\n\n/* last line */"]},"metadata":{},"sourceType":"module"}