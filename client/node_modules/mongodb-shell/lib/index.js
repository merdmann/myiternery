"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const shell_1 = require("./shell");
exports.ERROR = 'ERROR';
exports.SUCCESS = 'SUCCESS';
const TERMINATION_TOKEN = '$$$$8888!!!!!MPOJKJHGGHF453678HJGVHGFRY6758%%%£ùù';
class MongoShell {
    constructor(mongoUri, previousShellId) {
        if (previousShellId) {
            this.workerId = previousShellId;
        }
        else {
            this.workerId = Math.round(Math.random() * 1000000).toString();
        }
        this.shell = new shell_1.Shell(this.workerId, mongoUri);
    }
    destroy() {
        this.shell.destroy();
    }
    async sendCommand(command) {
        return new Promise((resolve, reject) => {
            const outs = [];
            let resolver;
            command.in = command.in;
            this.shell.sendCommand(command);
            this.shell.stdout.on('error', data => {
                resolve({ out: data.toString().trim(), status: exports.ERROR });
            });
            this.shell.stdout.on('data', data => {
                // console.log(data.toString())
                outs.push(data.toString().trim());
                clearTimeout(resolver);
                resolver = setTimeout(() => {
                    resolve({ out: outs.join('\n'), status: exports.SUCCESS });
                }, 100);
            });
        });
    }
}
exports.MongoShell = MongoShell;
