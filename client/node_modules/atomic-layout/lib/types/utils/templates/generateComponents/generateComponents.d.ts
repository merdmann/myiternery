import { AreasList } from '../getAreasList';
import * as React from 'react';
import { Breakpoint } from "../../../const/defaultOptions";
import { GenericProps } from "../../../const/props";
import { BoxProps } from "../../../components/Box";
export declare type AreaComponent = React.FunctionComponent<BoxProps>;
export interface AreasMap {
    [componentName: string]: AreaComponent;
}
/**
 * A high-order component that wraps the given area component in a placeholder.
 * This is used for conditional components, where placeholder component is rendered
 * until the condition for the area component is met (i.e. breakpoint).
 */
export declare const withPlaceholder: (Component: React.FunctionComponent<BoxProps>, breakpoints: Breakpoint[]) => {
    ({ children, ...restProps }: {
        children: React.ReactNode;
    } & GenericProps): any;
    displayName: string;
};
/**
 * Returns a map of React components based on the given grid areas
 * in the given template definitions.
 */
export default function generateComponents({ areas, templates, }: AreasList): AreasMap;
