{"version":3,"sources":["webpack://atomicLayout/webpack/universalModuleDefinition","webpack://atomicLayout/webpack/bootstrap","webpack://atomicLayout/external \"react\"","webpack://atomicLayout/external \"styled-components\"","webpack://atomicLayout/./src/const/defaultOptions.ts","webpack://atomicLayout/./src/utils/invariant/invariant.ts","webpack://atomicLayout/./src/utils/invariant/index.ts","webpack://atomicLayout/./src/utils/functions/warn/warn.ts","webpack://atomicLayout/./src/utils/functions/warn/index.ts","webpack://atomicLayout/./src/Layout.ts","webpack://atomicLayout/./src/utils/functions/compose/compose.ts","webpack://atomicLayout/./src/utils/functions/compose/index.ts","webpack://atomicLayout/./src/utils/functions/isset/isset.ts","webpack://atomicLayout/./src/utils/functions/isset/index.ts","webpack://atomicLayout/./src/utils/math/transformNumeric.ts","webpack://atomicLayout/./src/utils/strings/sanitizeTemplateArea/sanitizeTemplateArea.ts","webpack://atomicLayout/./src/utils/strings/sanitizeTemplateArea/index.ts","webpack://atomicLayout/./src/const/propAliases.ts","webpack://atomicLayout/./src/utils/strings/toLowerCaseFirst/toLowerCaseFirst.ts","webpack://atomicLayout/./src/utils/strings/toLowerCaseFirst/index.ts","webpack://atomicLayout/./src/utils/strings/parsePropName/parsePropName.ts","webpack://atomicLayout/./src/utils/strings/parsePropName/index.ts","webpack://atomicLayout/./src/utils/strings/toDashedString/toDashedString.ts","webpack://atomicLayout/./src/utils/strings/toDashedString/index.ts","webpack://atomicLayout/./src/utils/styles/normalizeQuery/normalizeQuery.ts","webpack://atomicLayout/./src/utils/styles/normalizeQuery/index.ts","webpack://atomicLayout/./src/utils/styles/createMediaQuery/createMediaQuery.ts","webpack://atomicLayout/./src/utils/styles/createMediaQuery/index.ts","webpack://atomicLayout/./src/utils/styles/applyStyles/applyStyles.ts","webpack://atomicLayout/./src/utils/styles/applyStyles/index.ts","webpack://atomicLayout/./src/components/Box.tsx","webpack://atomicLayout/./src/utils/functions/memoizeWith/memoizeWith.ts","webpack://atomicLayout/./src/utils/functions/memoizeWith/index.ts","webpack://atomicLayout/./src/utils/templates/getAreasList/getAreasList.ts","webpack://atomicLayout/./src/utils/templates/getAreasList/index.ts","webpack://atomicLayout/./src/utils/strings/hashString/hashString.ts","webpack://atomicLayout/./src/utils/strings/hashString/index.ts","webpack://atomicLayout/./src/components/MediaQuery.tsx","webpack://atomicLayout/./src/utils/strings/capitalize/capitalize.ts","webpack://atomicLayout/./src/utils/strings/capitalize/index.ts","webpack://atomicLayout/./src/utils/functions/pop/pop.ts","webpack://atomicLayout/./src/utils/functions/pop/index.ts","webpack://atomicLayout/./src/utils/functions/when/when.ts","webpack://atomicLayout/./src/utils/functions/when/index.ts","webpack://atomicLayout/./src/utils/functions/spread/spread.ts","webpack://atomicLayout/./src/utils/functions/spread/index.ts","webpack://atomicLayout/./src/utils/strings/getPrefix/getPrefix.ts","webpack://atomicLayout/./src/utils/strings/getPrefix/index.ts","webpack://atomicLayout/./src/utils/breakpoints/mergeBreakpoints/mergeBreakpoints.ts","webpack://atomicLayout/./src/utils/breakpoints/mergeBreakpoints/index.ts","webpack://atomicLayout/./src/utils/breakpoints/openBreakpoint/openBreakpoint.ts","webpack://atomicLayout/./src/utils/breakpoints/openBreakpoint/index.ts","webpack://atomicLayout/./src/utils/breakpoints/shouldMergeBreakpoints/shouldMergeBreakpoints.ts","webpack://atomicLayout/./src/utils/breakpoints/shouldMergeBreakpoints/index.ts","webpack://atomicLayout/./src/utils/breakpoints/getAreaBreakpoints/getAreaBreakpoints.ts","webpack://atomicLayout/./src/utils/breakpoints/getAreaBreakpoints/index.ts","webpack://atomicLayout/./src/utils/templates/generateComponents/generateComponents.tsx","webpack://atomicLayout/./src/utils/templates/generateComponents/index.ts","webpack://atomicLayout/./src/utils/strings/sanitizeTemplateString/sanitizeTemplateString.ts","webpack://atomicLayout/./src/utils/strings/sanitizeTemplateString/index.ts","webpack://atomicLayout/./src/utils/templates/parseTemplates/filterTemplateProps.ts","webpack://atomicLayout/./src/utils/templates/parseTemplates/parseTemplates.ts","webpack://atomicLayout/./src/utils/templates/parseTemplates/index.ts","webpack://atomicLayout/./src/components/Composition.tsx","webpack://atomicLayout/./src/utils/breakpoints/closeBreakpoint/closeBreakpoint.ts","webpack://atomicLayout/./src/utils/breakpoints/closeBreakpoint/index.ts","webpack://atomicLayout/./src/components/Only.tsx","webpack://atomicLayout/./src/utils/functions/debounce/debounce.ts","webpack://atomicLayout/./src/hooks/useViewportChange.ts","webpack://atomicLayout/./src/hooks/useBreakpointChange.ts","webpack://atomicLayout/./src/utils/breakpoints/withBreakpoints/withBreakpoints.ts","webpack://atomicLayout/./src/utils/breakpoints/withBreakpoints/index.ts","webpack://atomicLayout/./src/hooks/useResponsiveValue.ts","webpack://atomicLayout/./src/hooks/useResponsiveProps.ts","webpack://atomicLayout/./src/index.ts"],"names":["defaultOptions","defaultUnit","defaultBehavior","defaultBreakpointName","breakpoints","xs","maxWidth","sm","minWidth","md","lg","xl","invariant","variable","message","Error","warn","predicate","console","Layout","options","configure","warnOnMultiple","isConfigureCalled","Object","keys","forEach","optionName","hasOwnProperty","breakpointName","compose","funcs","reduce","f","g","isset","transformNumeric","value","suffix","sanitizeTemplateArea","area","replace","areaName","trim","transformTemplateString","areas","join","map","template","split","propAliases","props","transformValue","templateCols","templateRows","col","colStart","colEnd","row","rowStart","rowEnd","gap","gapCol","gapRow","gutter","gutterCol","gutterRow","autoRows","autoCols","autoFlow","align","alignItems","justify","justifyItems","justifyContent","place","placeItems","placeContent","flexDirection","flexShrink","flexGrow","flexWrap","height","minHeight","maxHeight","width","margin","marginTop","marginRight","marginBottom","marginLeft","marginVertical","marginHorizontal","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","paddingVertical","paddingHorizontal","toLowerCaseFirst","str","slice","toLowerCase","length","parsePropName","originPropName","joinedBreakpointNames","getBreakpointNames","joinedBehaviors","breakpointExp","RegExp","behaviorExp","behaviorMatch","match","behavior","breakpointMatch","purePropName","normalizedBreakpointName","isDefaultBreakpoint","breakpoint","name","isDefault","toDashedString","capitalLetter","normalizeQuery","queryProps","entries","filter","_","propValue","propName","shouldAppendProperty","queryParam","prefix","splitPropName","isDimensionalProp","includes","filterRelevantQueryParams","queryList","joinQueryList","transformer","createMediaQuery","dashedQueryProp","String","createStyleString","propsList","styleProps","breakpointOptions","getBreakpoint","shouldWrapInMediaQuery","applyStyles","pristineProps","transformedPropValue","Box","styled","div","flex","inline","memoizeWith","mappingFunc","cache","func","key","getAreasList","templateProps","areasList","acc","templateName","templateAreas","nextAreas","concat","nextTemplates","templates","Array","from","Set","hashString","hash","i","charCodeAt","queryParams","paramName","paramValue","resolvedParamValue","test","MediaQuery","children","query","React","matches","setMatches","handleMediaQueryChange","mediaQueryList","matchMedia","addListener","removeListener","capitalize","firstLetter","toUpperCase","pop","list","when","whenTrueFunc","args","spread","apply","getPrefix","prompt","mergeBreakpoints","breakpointA","breakpointB","includesArea","prevBehavior","nextBehavior","wentUp","goesDown","behavesSame","behavesInclusive","shouldStretch","mergedBreakpoint","nextValue","mirrorValue","openBreakpoint","undefined","neutralizeParamName","shouldCombineBreakpoints","allParams","every","pristineParamName","index","prevParamName","updateWith","updateFunc","first","rest","createContext","areaBreakpointsList","isLastTemplate","prevAreaBreakpoint","nextAreaBreakpoint","prevBreakpoint","shouldMerge","Boolean","shouldMergeBreakpoints","canMergeBreakpoints","shouldOpenBreakpoint","updateBreakpointsList","shouldReplaceLastArea","newBreakpoint","targetList","getAreaBreakpoints","withPlaceholder","Component","Placeholder","restProps","components","breakpointProps","displayName","createAreaComponent","generateComponents","componentsMap","areaParams","shouldAlwaysRender","capitalizedAreaName","ResponsiveComponent","Proxy","get","sanitizeTemplateString","sort","arr","filterTemplateProps","memoized","pairs","toString","parseTemplates","CompositionWrapper","Composition","areaComponents","hasAreaComponents","childrenType","hasChildrenFunction","flipBreakpoint","hasMinPrefix","nextPropName","parseFloat","resolveBreakpoint","breakpointRef","createWrapper","Only","except","exactBreakpointName","minBreakpointName","maxBreakpointName","to","wrapWith","minBreakpoint","maxBreakpoint","closeBreakpoint","debounce","duration","timeout","postpone","clearTimeout","setTimeout","useViewportChange","callback","debounceDuration","handleWindowResize","useEffect","window","addEventListener","removeEventListener","useBreakpointChange","prevBreakpointName","nextBreakpointName","find","mediaQuery","createWithBreakpoints","existingBreakpoints","breakpointsMap","defaultValue","hasBreakpoint","withBreakpoints","useResponsiveValue","useState","updateValue","useResponsiveProps","responsiveProps","setProps","relevantProps"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"styled-components\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"atomicLayout\", [\"react\", \"styled-components\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"atomicLayout\"] = factory(require(\"react\"), require(\"styled-components\"));\n\telse\n\t\troot[\"atomicLayout\"] = factory(root[\"react\"], root[\"styled-components\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","type AbsoluteUnits = 'cm' | 'mm' | 'in' | 'px' | 'pt' | 'pc'\ntype RelativeUnits =\n  | '%'\n  | 'em'\n  | 'ex'\n  | 'ch'\n  | 'rem'\n  | 'vw'\n  | 'vh'\n  | 'vmin'\n  | 'vmax'\n\nexport type Numeric = number | string\nexport type MeasurementUnit = AbsoluteUnits | RelativeUnits\nexport type BreakpointBehavior = 'up' | 'down' | 'only'\nexport interface Breakpoints {\n  [breakpointName: string]: Breakpoint\n}\nexport interface LayoutOptions {\n  /**\n   * Measurement unit that suffixes numeric prop values.\n   * @default \"px\"\n   * @example\n   * <Box padding={10} />\n   * // \"padding: 10px\"\n   */\n  defaultUnit: MeasurementUnit\n  /**\n   * Map of layout breakpoints.\n   */\n  breakpoints: Breakpoints\n  /**\n   * Breakpoint name to use when no explicit breakpoint\n   * name is specified in a prop name.\n   * @default \"xs\"\n   */\n  defaultBreakpointName: string\n  defaultBehavior: BreakpointBehavior\n}\n\nexport interface MediaQuery {\n  minHeight?: Numeric\n  maxHeight?: Numeric\n  minWidth?: Numeric\n  maxWidth?: Numeric\n  minResolution?: string\n  maxResolution?: string\n  aspectRatio?: string\n  minAspectRatio?: string\n  maxAspectRatio?: string\n  scan?: 'interlace' | 'progressive'\n  orientation?: 'portrait' | 'landscape'\n  displayMode?: 'fullscreen' | 'standalone' | 'minimal-ui' | 'browser'\n}\n\nexport interface Breakpoint extends MediaQuery {\n  /* Index signature for dynamic breakpoint composition */\n  [propName: string]: any\n}\n\nconst defaultOptions: LayoutOptions = {\n  defaultUnit: 'px',\n  defaultBehavior: 'up',\n  defaultBreakpointName: 'xs',\n  breakpoints: {\n    xs: {\n      maxWidth: '575px',\n    },\n    sm: {\n      minWidth: '576px',\n      maxWidth: '768px',\n    },\n    md: {\n      minWidth: '769px',\n      maxWidth: '992px',\n    },\n    lg: {\n      minWidth: '993px',\n      maxWidth: '1199px',\n    },\n    xl: {\n      minWidth: '1200px',\n    },\n  },\n}\n\nexport default defaultOptions\n","export default function invariant(variable: any, message: string): void {\n  if (!variable) {\n    throw new Error(message)\n  }\n}\n","export { default } from './invariant'\nexport * from './invariant'\n","export default function warn(predicate: any, message: string) {\n  if (!predicate) {\n    console.warn(message)\n  }\n}\n","export { default } from './warn'\nexport * from './warn'\n","import defaultOptions, {\n  LayoutOptions,\n  Breakpoint,\n  Breakpoints,\n  MeasurementUnit,\n  BreakpointBehavior,\n} from './const/defaultOptions'\nimport invariant from './utils/invariant'\nimport warn from './utils/functions/warn'\n\nclass Layout {\n  public defaultUnit: MeasurementUnit = defaultOptions.defaultUnit\n  public defaultBehavior: BreakpointBehavior = defaultOptions.defaultBehavior\n  public breakpoints: Breakpoints = defaultOptions.breakpoints\n  public defaultBreakpointName: string = defaultOptions.defaultBreakpointName\n  protected isConfigureCalled: boolean = false\n\n  constructor(options?: Partial<LayoutOptions>) {\n    return options ? this.configure(options, false) : this\n  }\n\n  /**\n   * Applies global layout options.\n   */\n  public configure(options: Partial<LayoutOptions>, warnOnMultiple = true) {\n    if (warnOnMultiple) {\n      warn(\n        !this.isConfigureCalled,\n        'Failed to configure Layout: do not call `Layout.configure()` more than once. Layout configuration must remain consistent throughout the application.',\n      )\n    }\n\n    invariant(\n      options && typeof options === 'object',\n      `Failed to configure Layout: expected an options Object, but got: ${options}.`,\n    )\n\n    Object.keys(options || {}).forEach((optionName) => {\n      this[optionName] = options[optionName]\n    })\n\n    invariant(\n      this.breakpoints,\n      'Failed to configure Layout: expected to have at least one breakpoint specified, but got none.',\n    )\n\n    invariant(\n      this.breakpoints.hasOwnProperty(this.defaultBreakpointName),\n      `Failed to configure Layout: cannot use \"${\n        this.defaultBreakpointName\n      }\" as the default breakpoint (breakpoint not found).`,\n    )\n\n    invariant(\n      this.defaultBreakpointName,\n      `Failed to configure Layout: expected \"defaultBreakpointName\" property set, but got: ${\n        this.defaultBreakpointName\n      }.`,\n    )\n\n    // invariant(\n    //   typeof this.defaultBreakpointName === 'string',\n    //   `Failed to configure Layout: expected \"defaultBreakpointName\" to be a string, but got: ${typeof this\n    //     .defaultBreakpointName}`,\n    // )\n\n    // Mark configure method as called to prevent its multiple calls\n    this.isConfigureCalled = warnOnMultiple\n\n    return this\n  }\n\n  /**\n   * Returns the collection of breakpoint names present\n   * in the current layout configuration.\n   */\n  public getBreakpointNames(): string[] {\n    return Object.keys(this.breakpoints)\n  }\n\n  /**\n   * Returns breakpoint options by the given breakpoint name.\n   */\n  public getBreakpoint(breakpointName: string): Breakpoint | undefined {\n    return this.breakpoints[breakpointName]\n  }\n}\n\nexport default new Layout()\n","type Func = (...args: any[]) => any\n\n/**\n * Returns a functional composition of the given functions.\n * Applies no currying.\n */\nexport default function compose(...funcs: Func[]) {\n  return funcs.reduce((f, g) => (...args: any[]) => f(g(...args)))\n}\n","export { default } from './compose'\nexport * from './compose'\n","export default function isset(variable: any): boolean {\n  return typeof variable !== 'undefined' && variable !== null\n}\n","export { default } from './isset'\nexport * from './isset'\n","import Layout from '@src/Layout'\nimport isset from '@utils/functions/isset'\n\nexport default function transformNumeric(value?: number | string): string {\n  if (!isset(value)) {\n    return ''\n  }\n\n  /**\n   * Suffix numeric value with the default unit.\n   * Accept explicit (string) value as-is.\n   *\n   * When given value is zero then its generated as it is, no suffix is attached\n   */\n  const suffix =\n    typeof value === 'number' && value !== 0 ? Layout.defaultUnit : ''\n\n  return `${value}${suffix}`\n}\n","import compose from '@utils/functions/compose'\n\ntype SanitizeTemplateArea = (str: string) => string\n\n/**\n * Trims whitespace, removes duplicate single quotes and enforces\n * that area line is wrapped in single quotes.\n */\nconst sanitizeTemplateArea: SanitizeTemplateArea = compose(\n  (area: string) => area.replace(/^.+$/gm, (areaName) => `'${areaName}'`),\n  (area: string) => area.replace(/'+/gm, ''),\n  (area: string) => area.trim(),\n)\n\nexport default sanitizeTemplateArea\n","export { default } from './sanitizeTemplateArea'\nexport * from './sanitizeTemplateArea'\n","import { Numeric } from '@const/defaultOptions'\nimport compose from '@utils/functions/compose'\nimport transformNumeric from '@utils/math/transformNumeric'\nimport sanitizeTemplateArea from '@utils/strings/sanitizeTemplateArea'\n\ntype ValueTransformer<I, R> = (val: I) => R\n\ninterface PropAliasDeclaration {\n  props: string[]\n  transformValue?: ValueTransformer<Numeric, string>\n}\n\nexport interface PropAliases {\n  [aliasName: string]: PropAliasDeclaration\n}\n\ntype TransformTemplateString = (template: string) => string\nconst transformTemplateString: TransformTemplateString = compose(\n  (areas: string[]) => areas.join('\\n'),\n  (areas: string[]) => areas.map(sanitizeTemplateArea),\n  (template: string) => template.split('\\n'),\n  (template: string) => template.trim(),\n)\n\n/**\n * Collection of prop aliases.\n * Prop alias is a prop name accepted by a component which is later\n * substituted by one or multiple CSS properties with a single value.\n * Each prop value can have a value transformer.\n */\nconst propAliases: PropAliases = {\n  /* CSS Grid */\n  area: {\n    props: ['grid-area'],\n  },\n  areas: {\n    props: ['grid-template-areas'],\n    transformValue: transformTemplateString,\n  },\n  template: {\n    props: ['grid-template-areas'],\n    transformValue: transformTemplateString,\n  },\n  templateCols: {\n    props: ['grid-template-columns'],\n  },\n  templateRows: {\n    props: ['grid-template-rows'],\n  },\n  col: {\n    props: ['grid-column'],\n  },\n  colStart: {\n    props: ['grid-column-start'],\n  },\n  colEnd: {\n    props: ['grid-column-end'],\n  },\n  row: {\n    props: ['grid-row'],\n  },\n  rowStart: {\n    props: ['grid-row-start'],\n  },\n  rowEnd: {\n    props: ['grid-row-end'],\n  },\n  gap: {\n    props: ['grid-gap'],\n    transformValue: transformNumeric,\n  },\n  gapCol: {\n    props: ['grid-column-gap'],\n    transformValue: transformNumeric,\n  },\n  gapRow: {\n    props: ['grid-row-gap'],\n    transformValue: transformNumeric,\n  },\n  gutter: {\n    props: ['grid-gap'],\n    transformValue: transformNumeric,\n  },\n  gutterCol: {\n    props: ['grid-column-gap'],\n    transformValue: transformNumeric,\n  },\n  gutterRow: {\n    props: ['grid-row-gap'],\n    transformValue: transformNumeric,\n  },\n  autoRows: {\n    props: ['grid-auto-rows'],\n    transformValue: transformNumeric,\n  },\n  autoCols: {\n    props: ['grid-auto-columns'],\n    transformValue: transformNumeric,\n  },\n  autoFlow: {\n    props: ['grid-auto-flow'],\n  },\n  align: {\n    props: ['align-self'],\n  },\n  alignItems: {\n    props: ['align-items'],\n  },\n  justify: {\n    props: ['justify-self'],\n  },\n  justifyItems: {\n    props: ['justify-items'],\n  },\n  justifyContent: {\n    props: ['justify-content'],\n  },\n  place: {\n    props: ['place-self'],\n  },\n  placeItems: {\n    props: ['place-items'],\n  },\n  placeContent: {\n    props: ['place-content'],\n  },\n\n  /* CSS Flexbox */\n  flexDirection: {\n    props: ['flex-direction'],\n  },\n  flexShrink: {\n    props: ['flex-shrink'],\n  },\n  flexGrow: {\n    props: ['flex-grow'],\n  },\n  flexWrap: {\n    props: ['flex-wrap'],\n  },\n\n  /* Dimensions */\n  height: {\n    props: ['height'],\n    transformValue: transformNumeric,\n  },\n  minHeight: {\n    props: ['min-height'],\n    transformValue: transformNumeric,\n  },\n  maxHeight: {\n    props: ['max-height'],\n    transformValue: transformNumeric,\n  },\n  width: {\n    props: ['width'],\n    transformValue: transformNumeric,\n  },\n  minWidth: {\n    props: ['min-width'],\n    transformValue: transformNumeric,\n  },\n  maxWidth: {\n    props: ['max-width'],\n    transformValue: transformNumeric,\n  },\n\n  /* Space */\n  margin: {\n    props: ['margin'],\n    transformValue: transformNumeric,\n  },\n  marginTop: {\n    props: ['margin-top'],\n    transformValue: transformNumeric,\n  },\n  marginRight: {\n    props: ['margin-right'],\n    transformValue: transformNumeric,\n  },\n  marginBottom: {\n    props: ['margin-bottom'],\n    transformValue: transformNumeric,\n  },\n  marginLeft: {\n    props: ['margin-left'],\n    transformValue: transformNumeric,\n  },\n  marginVertical: {\n    props: ['margin-top', 'margin-bottom'],\n    transformValue: transformNumeric,\n  },\n  marginHorizontal: {\n    props: ['margin-right', 'margin-left'],\n    transformValue: transformNumeric,\n  },\n\n  padding: {\n    props: ['padding'],\n    transformValue: transformNumeric,\n  },\n  paddingTop: {\n    props: ['padding-top'],\n    transformValue: transformNumeric,\n  },\n  paddingRight: {\n    props: ['padding-right'],\n    transformValue: transformNumeric,\n  },\n  paddingBottom: {\n    props: ['padding-bottom'],\n    transformValue: transformNumeric,\n  },\n  paddingLeft: {\n    props: ['padding-left'],\n    transformValue: transformNumeric,\n  },\n  paddingVertical: {\n    props: ['padding-top', 'padding-bottom'],\n    transformValue: transformNumeric,\n  },\n  paddingHorizontal: {\n    props: ['padding-right', 'padding-left'],\n    transformValue: transformNumeric,\n  },\n}\n\nexport default propAliases\n","export default function toLowerCaseFirst<R = string>(str: string): R {\n  return (str.slice(0, 1).toLowerCase() + str.slice(1, str.length)) as any\n}\n","export { default } from './toLowerCaseFirst'\nexport * from './toLowerCaseFirst'\n","import { BreakpointBehavior } from '@const/defaultOptions'\nimport Layout from '@src/Layout'\nimport toLowerCaseFirst from '../toLowerCaseFirst'\n\nexport interface Props {\n  [propName: string]: any\n}\n\nexport interface ParsedProp {\n  originPropName: string\n  purePropName: string\n  breakpoint: {\n    name: string\n    isDefault: boolean\n  }\n  behavior: BreakpointBehavior\n}\n\n/**\n * Returns a parsed prop summary, which includes pure prop name,\n * an optional breakpoint name and breakpoint behavior.\n *\n * \\w+(?<=(sm)?(only)?)$\n * This RegExp also works well. May consider implementing once\n * lookbehind is supported everywhere.\n */\nexport default function parsePropName(originPropName: string): ParsedProp {\n  const joinedBreakpointNames = Layout.getBreakpointNames().join('|')\n  const joinedBehaviors = ['down', 'only'].join('|')\n  const breakpointExp = new RegExp(`(${joinedBreakpointNames})$`, 'gi')\n  const behaviorExp = new RegExp(`(${joinedBehaviors})$`, 'gi')\n\n  const behaviorMatch = originPropName.match(behaviorExp)\n  const behavior = behaviorMatch ? behaviorMatch[0] : ''\n  const breakpointMatch = originPropName\n    .replace(behavior, '')\n    .match(breakpointExp)\n  const breakpointName = breakpointMatch ? breakpointMatch[0] : ''\n  const purePropName = originPropName\n    .replace(breakpointName, '')\n    .replace(behavior, '')\n\n  /**\n   * Get normalized breakpoint name.\n   * When a breakpoint name is a part of the prop name, covert it first letter\n   * to lowercase to match the layout options. Otherwise, take the default\n   * breakpoint name.\n   */\n  const normalizedBreakpointName = breakpointName\n    ? toLowerCaseFirst(breakpointName)\n    : Layout.defaultBreakpointName\n\n  const isDefaultBreakpoint =\n    normalizedBreakpointName === Layout.defaultBreakpointName\n\n  return {\n    originPropName,\n    purePropName,\n    behavior: behavior\n      ? toLowerCaseFirst<BreakpointBehavior>(behavior)\n      : Layout.defaultBehavior,\n    breakpoint: {\n      name: normalizedBreakpointName,\n      isDefault: isDefaultBreakpoint,\n    },\n  }\n}\n","export { default } from './parsePropName'\nexport * from './parsePropName'\n","/**\n * @example\n * toDashedString('fooBar') // \"foo-bar\"\n */\nexport default function toDashedString(str: string): string {\n  return str.replace(/[A-Z]/g, (capitalLetter) => {\n    return `-${capitalLetter}`.toLowerCase()\n  })\n}\n","export { default } from './toDashedString'\nexport * from './toDashedString'\n","import { Numeric, Breakpoint } from '@const/defaultOptions'\nimport isset from '@utils/functions/isset'\nimport toDashedString from '@utils/strings/toDashedString'\n\n/**\n * Normalizes given media query object to a list of [propName, propValue].\n * @example\n * normalizeQuery({ minWidth: 120 })\n * // [['min-width', 120]]\n */\nexport default function normalizeQuery(\n  queryProps: Breakpoint,\n): Array<[string, Numeric]> {\n  return Object.entries<Numeric>(queryProps)\n    .filter(([_, propValue]) => isset(propValue))\n    .map<[string, Numeric]>(([propName, propValue]) => [\n      toDashedString(propName),\n      propValue,\n    ])\n}\n","export { default } from './normalizeQuery'\nexport * from './normalizeQuery'\n","import { Numeric, Breakpoint, BreakpointBehavior } from '@const/defaultOptions'\nimport transformNumeric from '@utils/math/transformNumeric'\nimport normalizeQuery from '@src/utils/styles/normalizeQuery'\nimport compose from '@src/utils/functions/compose'\n\n/**\n * Determines whether a given media query param should be added\n * to the media query string based on a breakpoint's behavior.\n */\nconst shouldAppendProperty = (\n  queryParam: string,\n  behavior: BreakpointBehavior,\n): boolean => {\n  const [prefix, splitPropName] = queryParam.split('-')\n  const isDimensionalProp = ['height', 'width'].includes(splitPropName)\n\n  if (!isDimensionalProp) {\n    return true\n  }\n\n  return (\n    (prefix === 'min' && ['up', 'only'].includes(behavior)) ||\n    (prefix === 'max' && ['down', 'only'].includes(behavior))\n  )\n}\n\nconst filterRelevantQueryParams = (behavior: BreakpointBehavior) => (\n  queryList,\n): boolean => {\n  return queryList.filter(([queryParam]) =>\n    shouldAppendProperty(queryParam, behavior),\n  )\n}\n\n/**\n * Joins a given query params list with the given transformer function.\n */\nexport const joinQueryList = (\n  transformer: (pair: [string, Numeric]) => any,\n) => (queryList) => {\n  return queryList.map(transformer).join(' and ')\n}\n\nexport default function createMediaQuery(\n  breakpoint: Breakpoint,\n  behavior: BreakpointBehavior,\n): string {\n  return compose(\n    joinQueryList(([dashedQueryProp, propValue]) => {\n      return `(${dashedQueryProp}:${String(transformNumeric(propValue))})`\n    }),\n    filterRelevantQueryParams(behavior),\n    normalizeQuery,\n  )(breakpoint)\n}\n","export { default } from './createMediaQuery'\nexport * from './createMediaQuery'\n","import Layout from '@src/Layout'\nimport { BreakpointBehavior } from '@const/defaultOptions'\nimport propAliases from '@const/propAliases'\nimport parsePropName, { Props } from '@utils/strings/parsePropName'\nimport isset from '@utils/functions/isset'\nimport createMediaQuery from '../createMediaQuery'\n\nconst createStyleString = (\n  propsList: string[],\n  propValue: any,\n  breakpoint: any,\n  behavior: BreakpointBehavior,\n) => {\n  const styleProps = propsList\n    .map((propName) => `${propName}:${String(propValue)};`)\n    .join('')\n\n  const breakpointOptions = Layout.getBreakpoint(breakpoint.name)\n\n  /**\n   * Wrap CSS rule in a media query only if its prop includes\n   * a breakpoint and behavior different than the default ones.\n   */\n  const shouldWrapInMediaQuery =\n    breakpointOptions &&\n    !(breakpoint.isDefault && behavior === Layout.defaultBehavior)\n\n  return shouldWrapInMediaQuery\n    ? `@media ${createMediaQuery(breakpointOptions, behavior)} {${styleProps}}`\n    : styleProps\n}\n\nexport default function applyStyles(pristineProps: Props): string {\n  return (\n    Object.keys(pristineProps)\n      /* Parse each prop to include \"breakpoint\" and \"behavior\" */\n      .map(parsePropName)\n      /* Filter out props that are not included in prop aliases */\n      .filter(({ purePropName }) => propAliases.hasOwnProperty(purePropName))\n      /* Filter out props with \"undefined\" or \"null\" as value */\n      .filter(({ originPropName }) => isset(pristineProps[originPropName]))\n      /* Map each prop to a CSS string */\n      .map(({ purePropName, originPropName, breakpoint, behavior }) => {\n        const { props, transformValue } = propAliases[purePropName]\n        const propValue = pristineProps[originPropName]\n        const transformedPropValue = transformValue\n          ? transformValue(propValue)\n          : propValue\n\n        return createStyleString(\n          props,\n          transformedPropValue,\n          breakpoint,\n          behavior,\n        )\n      })\n      .join(' ')\n  )\n}\n","export { default } from './applyStyles'\nexport * from './applyStyles'\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { GenericProps } from '@const/props'\nimport applyStyles from '@utils/styles/applyStyles'\n\nexport interface BoxProps extends GenericProps {\n  [propName: string]: any\n  flex?: boolean\n  inline?: boolean\n}\n\nconst Box: React.FunctionComponent<BoxProps> = styled.div<BoxProps>`\n  && {\n    ${applyStyles};\n    display: ${({ flex, inline }) =>\n      flex\n        ? inline\n          ? 'inline-flex'\n          : 'flex'\n        : inline\n        ? 'inline-block'\n        : 'block'};\n  }\n`\n\nexport default Box\n","interface Cache {\n  [key: string]: any\n}\n\nexport default function memoizeWith(mappingFunc: (...args: any[]) => string) {\n  const cache: Cache = {}\n\n  return (func: (...args: any[]) => any) =>\n    function(...args: any[]) {\n      const key = mappingFunc(...args)\n\n      if (!(key in cache)) {\n        cache[key] = func(...args)\n      }\n\n      return cache[key]\n    }\n}\n","export { default } from './memoizeWith'\nexport * from './memoizeWith'\n","import { Breakpoint, BreakpointBehavior } from '@const/defaultOptions'\nimport Layout from '@src/Layout'\nimport parsePropName from '@utils/strings/parsePropName'\n\nexport interface Template {\n  breakpoint: Breakpoint\n  behavior: BreakpointBehavior\n  areas: string[]\n}\n\nexport interface AreasList {\n  areas: string[]\n  templates: Template[]\n}\n\nexport interface TemplateProps {\n  [propName: string]: string[]\n}\n\nexport default function getAreasList(templateProps: TemplateProps): AreasList {\n  const areasList = Object.entries(templateProps).reduce<AreasList>(\n    (acc, [templateName, templateAreas]) => {\n      const { breakpoint, behavior } = parsePropName(templateName)\n      const nextAreas = acc.areas.concat(templateAreas)\n      const nextTemplates = acc.templates.concat({\n        breakpoint: Layout.getBreakpoint(breakpoint.name),\n        behavior,\n        areas: templateAreas,\n      })\n\n      return {\n        areas: nextAreas,\n        templates: nextTemplates,\n      }\n    },\n    {\n      areas: [],\n      templates: [],\n    },\n  )\n\n  const { areas, templates } = areasList\n\n  return {\n    areas: Array.from(new Set(areas)),\n    templates,\n  }\n}\n","export { default } from './getAreasList'\nexport * from './getAreasList'\n","export default function hashString(str: string): number {\n  const { length } = str\n  let hash = 0\n  let i = 0\n\n  if (length > 0) {\n    while (i < length) {\n      hash = ((hash << 5) - hash + str.charCodeAt(i++)) | 0\n    }\n  }\n\n  return hash\n}\n","export { default } from './hashString'\nexport * from './hashString'\n","import * as React from 'react'\nimport { MediaQuery as MediaQueryParams } from '@const/defaultOptions'\nimport { joinQueryList } from '@utils/styles/createMediaQuery'\nimport normalizeQuery from '@src/utils/styles/normalizeQuery'\nimport transformNumeric from '@utils/math/transformNumeric'\nimport compose from '@src/utils/functions/compose'\n\ninterface Props extends MediaQueryParams {\n  children: (matches: boolean) => JSX.Element\n  matches?: boolean\n}\n\nconst createMediaQuery = (queryParams: MediaQueryParams): string => {\n  return compose(\n    joinQueryList(([paramName, paramValue]) => {\n      /**\n       * Transform values that begin with a number to prevent\n       * transformations of \"calc\" expressions.\n       * Transformation of numerics is necessary when a simple\n       * number is used as a value (min-width: 750) is not valid.\n       *\n       * (min-width: 750) ==> (min-width: 750px)\n       */\n      const resolvedParamValue = /^\\d/.test(String(paramValue))\n        ? transformNumeric(paramValue)\n        : paramValue\n      return `(${paramName}:${resolvedParamValue})`\n    }),\n    normalizeQuery,\n  )(queryParams)\n}\n\nconst MediaQuery = (props: Props): JSX.Element => {\n  const { children, ...queryParams } = props\n  const query = React.useMemo(() => createMediaQuery(queryParams), [queryParams])\n  const [matches, setMatches] = React.useState(false)\n\n  const handleMediaQueryChange = (\n    mediaQueryList: MediaQueryList | MediaQueryListEvent,\n  ) => {\n    setMatches(mediaQueryList.matches)\n  }\n\n  React.useEffect(() => {\n    const mediaQueryList = matchMedia(query)\n    handleMediaQueryChange(mediaQueryList)\n    mediaQueryList.addListener(handleMediaQueryChange)\n\n    return () => mediaQueryList.removeListener(handleMediaQueryChange)\n  }, Object.keys(queryParams))\n\n  return children(matches)\n}\n\nexport default MediaQuery\n","export default function capitalize(str: string): string {\n  return str.replace(/^./, (firstLetter) => firstLetter.toUpperCase())\n}\n","export { default } from './capitalize'\nexport * from './capitalize'\n","/**\n * Returns the shallow copy of the given array with\n * the last element removed.\n */\nexport default function pop<T>(list: T[]): T[] {\n  return list.slice(0, list.length - 1)\n}\n","export { default } from './pop'\nexport * from './pop'\n","export default function when(\n  predicate: (...args: any[]) => boolean,\n  whenTrueFunc: (...args: any[]) => any,\n) {\n  return (args: any) => (predicate(args) ? whenTrueFunc(args) : args)\n}\n","export { default } from './when'\nexport * from './when'\n","export default function spread(func: (...args: any[]) => any) {\n  return (args: any) => func.apply(null, args)\n}\n","export { default } from './spread'\nexport * from './spread'\n","export default function getPrefix(str: string): string {\n  const prompt = str.match(/^(min|max)/)\n  return prompt ? prompt[0] : ''\n}\n","export { default } from './getPrefix'\nexport * from './getPrefix'\n","import { AreaBreakpoint } from '../getAreaBreakpoints'\nimport defaultOptions from '@const/defaultOptions'\nimport transformNumeric from '@utils/math/transformNumeric'\nimport getPrefix from '@utils/strings/getPrefix'\n\n/**\n * Merges two given mergable breakpoints.\n */\nexport default function mergeBreakpoints(\n  breakpointA: AreaBreakpoint,\n  breakpointB: AreaBreakpoint,\n  includesArea: boolean,\n): AreaBreakpoint {\n  const { behavior: prevBehavior } = breakpointB\n  const { behavior: nextBehavior } = breakpointA\n\n  const wentUp = prevBehavior === 'up'\n  const goesDown = nextBehavior === 'down'\n  const behavesSame = prevBehavior === nextBehavior\n  const behavesInclusive = wentUp && goesDown\n  const shouldStretch = wentUp\n\n  const mergedBreakpoint = { ...breakpointB, ...breakpointA }\n\n  return Object.keys(mergedBreakpoint).reduce<AreaBreakpoint>(\n    (acc, propName) => {\n      let nextValue = mergedBreakpoint[propName]\n      const prefix = getPrefix(propName)\n\n      if (propName === 'behavior') {\n        if (!includesArea && shouldStretch) {\n          nextValue = 'down'\n        }\n      }\n\n      if (prefix === 'max') {\n        if (!includesArea && shouldStretch) {\n          const mirrorValue = breakpointA[propName.replace(/^max/, 'min')]\n          nextValue = `calc(${transformNumeric(mirrorValue)} - 1px)`\n        }\n      }\n\n      if (prefix === 'min') {\n        if (includesArea) {\n          if (behavesSame || behavesInclusive) {\n            nextValue = breakpointB[propName]\n          }\n        } else {\n          if (shouldStretch) {\n            nextValue = breakpointB[propName]\n          }\n        }\n      }\n\n      return {\n        ...acc,\n        [propName]: nextValue,\n      }\n    },\n    {\n      behavior: defaultOptions.defaultBehavior,\n    },\n  )\n}\n","export { default } from './mergeBreakpoints'\nexport * from './mergeBreakpoints'\n","import { Breakpoint } from '@const/defaultOptions'\nimport getPrefix from '@utils/strings/getPrefix'\n\n/**\n * Opens the given breakpoint.\n * A breakpoint is considered open when it has no upper boundary. For example,\n * a breakpoint that has \"maxWidth: undefined\" is the open breakpoint.\n */\nexport default function openBreakpoint(breakpoint: Breakpoint): Breakpoint {\n  return Object.keys(breakpoint).reduce<Breakpoint>(\n    (acc, key) => ({\n      ...acc,\n      [key]: getPrefix(key) === 'max' ? undefined : breakpoint[key],\n    }),\n    {},\n  )\n}\n","export { default } from './openBreakpoint'\nexport * from './openBreakpoint'\n","import { Breakpoint } from '@const/defaultOptions'\n\n/**\n * Replaces the prefixes in a parameter name.\n * Allows strict comparison of same parameters with different prefixes.\n * Does not test for inclusion/notch.\n *\n * @example\n * neutralizeParamName('maxWidth') // \"_width\"\n * neutralizeParamName('minWidth') // \"_width\"\n */\nconst neutralizeParamName = (paramName: string): string => {\n  return paramName.replace(/^min|max/, '_')\n}\n\n/**\n * Determines whether two given breakpoints can be merged.\n * Assures non-compatible breakpoints are not prompted to\n * be merged during the area params composition.\n */\nexport default function shouldCombineBreakpoints(\n  breakpointA: Breakpoint,\n  breakpointB: Breakpoint,\n): boolean {\n  const allParams = Object.keys(breakpointA).concat(Object.keys(breakpointB))\n\n  return allParams.every((pristineParamName, index) => {\n    const paramName = neutralizeParamName(pristineParamName)\n    const prevParamName = neutralizeParamName(allParams[index - 1] || paramName)\n\n    return paramName === prevParamName\n  })\n}\n","export { default } from './shouldMergeBreakpoints'\nexport * from './shouldMergeBreakpoints'\n","import { Breakpoint, BreakpointBehavior } from '@const/defaultOptions'\nimport { Template } from '@utils/templates/getAreasList'\nimport pop from '@utils/functions/pop'\nimport when from '@utils/functions/when'\nimport spread from '@utils/functions/spread'\nimport compose from '@utils/functions/compose'\nimport mergeBreakpoints from '../mergeBreakpoints'\nimport openBreakpoint from '../openBreakpoint'\nimport shouldMergeBreakpoints from '../shouldMergeBreakpoints'\n\nexport type AreaBreakpoint = Breakpoint & {\n  behavior: BreakpointBehavior\n}\n\ntype AreaBreakpointsList = Array<AreaBreakpoint | null>\n\ntype AreaBreakpointTuple = [\n  AreaBreakpoint,\n  AreaBreakpoint | null,\n  boolean,\n  boolean,\n  boolean,\n  AreaBreakpointsList\n]\n\nconst updateWith = (key: string, updateFunc: (...args: any[]) => any) => {\n  return (args: any) => {\n    const [first, ...rest] = args\n    return [updateFunc(args), ...rest]\n  }\n}\n\nconst createContext = (areaName: string) => {\n  return (\n    areaBreakpointsList: AreaBreakpointsList,\n    template: Template,\n    index: number,\n    templates: Template[],\n  ): AreaBreakpointTuple => {\n    const isLastTemplate = index === templates.length - 1\n    const { areas, behavior, breakpoint } = template\n    const includesArea = areas.includes(areaName)\n    const prevAreaBreakpoint =\n      areaBreakpointsList[areaBreakpointsList.length - 1]\n    const nextAreaBreakpoint: AreaBreakpoint = {\n      ...breakpoint,\n      behavior,\n    }\n\n    const {\n      behavior: prevBehavior,\n      ...prevBreakpoint\n    } = prevAreaBreakpoint || { behavior: '' }\n    const shouldMerge =\n      Boolean(prevAreaBreakpoint) &&\n      shouldMergeBreakpoints(prevBreakpoint, breakpoint)\n\n    return [\n      nextAreaBreakpoint,\n      prevAreaBreakpoint,\n      includesArea,\n      isLastTemplate,\n      shouldMerge,\n      areaBreakpointsList,\n    ]\n  }\n}\n\nconst canMergeBreakpoints = ([\n  nextAreaBreakpoint,\n  prevAreaBreakpoint,\n  includesArea,\n  isLastTemplate,\n  shouldMerge,\n]: AreaBreakpointTuple): boolean => {\n  return shouldMerge\n}\n\nconst shouldOpenBreakpoint = ([\n  nextAreaBreakpoint,\n  prevAreaBreakpoint,\n  includesArea,\n  isLastTemplate,\n]: AreaBreakpointTuple): boolean => {\n  return isLastTemplate && nextAreaBreakpoint.behavior === 'up'\n}\n\nconst updateBreakpointsList = ([\n  nextAreaBreakpoint,\n  prevAreaBreakpoint,\n  includesArea,\n  isLastTemplate,\n  shouldMerge,\n  areaBreakpointsList,\n]: AreaBreakpointTuple): AreaBreakpointsList => {\n  /* Fallback to an empty object when there is no previous breakpoint in the list */\n  const { behavior: prevBehavior } = prevAreaBreakpoint || {\n    behavior: '',\n  }\n  const { behavior: nextBehavior } = nextAreaBreakpoint\n\n  const wentUp = prevBehavior === 'up'\n  const goesDown = nextBehavior === 'down'\n  const behavesSame = prevBehavior === nextBehavior\n  const behavesInclusive = wentUp && goesDown\n\n  /* Alias for better readability */\n  const shouldStretch = wentUp\n  let shouldReplaceLastArea = includesArea && (behavesSame || behavesInclusive)\n\n  if (!shouldMerge) {\n    shouldReplaceLastArea = false\n  }\n\n  let newBreakpoint: AreaBreakpointsList = [nextAreaBreakpoint]\n\n  if (!includesArea) {\n    /**\n     * When the area is stretched, append explicit \"null\" afterward\n     * to prevent the stretched area from being treated as a sibling area\n     * in any further calculations.\n     */\n    newBreakpoint = shouldStretch ? [nextAreaBreakpoint, null] : [null]\n\n    if (shouldStretch) {\n      shouldReplaceLastArea = true\n    }\n  }\n\n  const targetList = shouldReplaceLastArea\n    ? pop(areaBreakpointsList)\n    : areaBreakpointsList\n\n  return targetList.concat(newBreakpoint)\n}\n\nconst getAreaBreakpoints = (\n  areaName: string,\n  templates: Template[],\n): AreaBreakpointsList =>\n  templates.reduce(\n    compose(\n      updateBreakpointsList,\n      when(\n        shouldOpenBreakpoint,\n        updateWith('nextAreaBreakpoint', spread(openBreakpoint)),\n      ),\n      when(\n        canMergeBreakpoints,\n        updateWith('nextAreaBreakpoint', spread(mergeBreakpoints)),\n      ),\n      createContext(areaName),\n    ),\n    [],\n  )\n\nexport default getAreaBreakpoints\n","export { default } from './getAreaBreakpoints'\nexport * from './getAreaBreakpoints'\n","import { AreasList } from '../getAreasList'\nimport * as React from 'react'\nimport styled from 'styled-components'\nimport { Breakpoint } from '@const/defaultOptions'\nimport { GenericProps } from '@const/props'\nimport MediaQuery from '@components/MediaQuery'\nimport Box, { BoxProps } from '@components/Box'\nimport capitalize from '@utils/strings/capitalize'\nimport getAreaBreakpoints, {\n  AreaBreakpoint,\n} from '@utils/breakpoints/getAreaBreakpoints'\n\nexport type AreaComponent = React.FunctionComponent<BoxProps>\nexport interface AreasMap {\n  [componentName: string]: AreaComponent\n}\n\n/**\n * A high-order component that wraps the given area component in a placeholder.\n * This is used for conditional components, where placeholder component is rendered\n * until the condition for the area component is met (i.e. breakpoint).\n */\nexport const withPlaceholder = (\n  Component: AreaComponent,\n  breakpoints: Breakpoint[],\n) => {\n  const Placeholder = ({\n    children,\n    ...restProps\n  }: {\n    children: React.ReactNode\n  } & GenericProps) =>\n    breakpoints.filter(Boolean).reduce((components, breakpointProps, index) => {\n      const { behavior, ...queryProps } = breakpointProps\n\n      return components.concat(\n        <MediaQuery {...queryProps} key={`${Component.displayName}_${index}`}>\n          {(matches) =>\n            matches && <Component {...restProps}>{children}</Component>\n          }\n        </MediaQuery>,\n      )\n    }, [])\n\n  Placeholder.displayName = `Placeholder(${Component.displayName})`\n\n  return Placeholder\n}\n\nconst createAreaComponent = (areaName: string): AreaComponent => (props) => (\n  <Box area={areaName} {...props} />\n)\n\n/**\n * Returns a map of React components based on the given grid areas\n * in the given template definitions.\n */\nexport default function generateComponents({\n  areas,\n  templates,\n}: AreasList): AreasMap {\n  const componentsMap = areas.reduce<AreasMap>((components, areaName) => {\n    const areaParams = getAreaBreakpoints(areaName, templates)\n    const shouldAlwaysRender =\n      areaParams.length === 1 &&\n      areaParams.every(\n        (breakpoint) => !breakpoint.minWidth && !breakpoint.maxWidth,\n      )\n\n    const Component = createAreaComponent(areaName)\n    const capitalizedAreaName = capitalize(areaName)\n    Component.displayName = capitalizedAreaName\n\n    const ResponsiveComponent = shouldAlwaysRender\n      ? Component\n      : withPlaceholder(Component, areaParams)\n\n    return {\n      ...components,\n      [capitalizedAreaName]: ResponsiveComponent,\n    }\n  }, {})\n\n  /**\n   * Return plain components map for browsers that don't support Proxy.\n   * Requires safety check before rendering conditional areas.\n   */\n  return typeof Proxy === 'undefined'\n    ? componentsMap\n    : new Proxy<AreasMap>(componentsMap, {\n        get(components, areaName: string) {\n          if (areaName in components || typeof areaName === 'symbol') {\n            return components[areaName]\n          }\n\n          // @ts-ignore-line\n          if (!__PROD__) {\n            console.warn(\n              'Prevented render of the area \"%s\", which is not found in the template definition. Please render one of the existing areas (\"%s\"), or modify the template to include \"%s\".',\n              areaName,\n              areas\n                /* Filter out \".\" placeholder from the list of areas */\n                .filter((singleAreaName) => /\\w+/.test(singleAreaName))\n                /* Sort areas alphabetically for easier eye navigation */\n                .sort()\n                /* Capitalize areas to correspond to area components */\n                .map(capitalize)\n                .join('\", \"'),\n              areaName.toLowerCase(),\n            )\n          }\n\n          /**\n           * Replace non-existing area component with\n           * the dummy component that renders nothing.\n           * This prevents from the exception when rendering \"undefined\"\n           * and allows conditional template areas.\n           */\n          return () => null\n        },\n      })\n}\n","export { default } from './generateComponents'\nexport * from './generateComponents'\n","import compose from '@utils/functions/compose'\n\ntype SanitizeTemplateString = (str: string) => string[]\n\n/**\n * Returns an array of unique normalized grid areas\n * from the given template string.\n */\nconst sanitizeTemplateString: SanitizeTemplateString = compose(\n  (list: string[]): string[] => list.sort(),\n\n  /* Deduplicates area strings */\n  (list: string[]): string[] => Array.from(new Set(list)),\n\n  /* Filters out empty area strings */\n  (arr: any[]) => arr.filter(Boolean),\n\n  /* Splits into a list of areas */\n  (str: string) => str.split(' '),\n\n  /* Deduplicates multiple spaces */\n  (str: string) => str.replace(/\\s+/g, ' '),\n\n  /* Replaces newlines and single quotes with spaces */\n  (str: string) => str.replace(/\\r?\\n|\\'+/g, ' '),\n)\n\nexport default sanitizeTemplateString\n","export { default } from './sanitizeTemplateString'\nexport * from './sanitizeTemplateString'\n","import parsePropName, { Props } from '@utils/strings/parsePropName'\nimport sanitizeTemplateString from '@utils/strings/sanitizeTemplateString'\n\nexport interface TemplateProps {\n  [templateProp: string]: string[]\n}\n\n/**\n * Accepts a props object and filters it to include\n * only template-related prop:value pairs.\n */\nconst filterTemplateProps = (props: Props): TemplateProps => {\n  return Object.keys(props)\n    .filter((propName) => {\n      const { purePropName } = parsePropName(propName)\n      return ['areas', 'template'].includes(purePropName)\n    })\n    .reduce<TemplateProps>((acc, propName) => {\n      return {\n        ...acc,\n        [propName]: sanitizeTemplateString(props[propName]),\n      }\n    }, {})\n}\n\nexport default filterTemplateProps\n","import compose from '@utils/functions/compose'\nimport memoizeWith from '@utils/functions/memoizeWith'\nimport getAreasList from '../getAreasList'\nimport hashString from '@utils/strings/hashString'\nimport { Props } from '@utils/strings/parsePropName'\nimport generateComponents, { AreasMap } from '../generateComponents'\nimport filterTemplateProps, { TemplateProps } from './filterTemplateProps'\n\ntype ParseTemplates = (props: Props) => AreasMap\n\n/**\n * Memoize areas generation based on the sanitized \"templateProp:areas\" pairs.\n * Alphabetical sorting of incoming template areas allows reproducible cache keys.\n * @todo `pairs` is an empty array sometimes. Should we handle it somehow?\n */\nconst memoized = memoizeWith((templateProps: TemplateProps) => {\n  const pairs = Object.entries(templateProps).reduce<string[]>(\n    (acc, [propName, templateAreas]) => {\n      return acc.concat(`${propName}:${templateAreas.join()}`)\n    },\n    [],\n  )\n\n  return hashString(pairs.join()).toString()\n})\n\nconst parseTemplates: ParseTemplates = compose(\n  memoized(\n    compose(\n      generateComponents,\n      getAreasList,\n    ),\n  ),\n  filterTemplateProps,\n)\n\nexport default parseTemplates\n","export { default } from './parseTemplates'\nexport * from './parseTemplates'\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { GenericProps, GridProps } from '@const/props'\nimport { AreasMap } from '@utils/templates/generateComponents'\nimport parseTemplates from '@utils/templates/parseTemplates'\nimport applyStyles from '@utils/styles/applyStyles'\nimport warn from '@utils/functions/warn'\n\ntype ChildrenFunction = (areas: AreasMap) => React.ReactNode\n\ninterface CompositionProps extends GenericProps, GridProps {\n  [propName: string]: any\n  children: ChildrenFunction | React.ReactNode\n  inline?: boolean\n}\n\nconst CompositionWrapper = styled.div<CompositionProps>`\n  && {\n    ${applyStyles};\n    display: ${({ inline }) => (inline ? 'inline-grid' : 'grid')};\n  }\n`\n\nconst Composition: React.FunctionComponent<CompositionProps> = ({\n  children,\n  ...restProps\n}) => {\n  const areaComponents = parseTemplates(restProps)\n  const hasAreaComponents = Object.keys(areaComponents).length > 0\n  const childrenType = typeof children\n  const hasChildrenFunction = childrenType === 'function'\n\n  // Warn on attempt to use \"areas\"/\"template\" props without children-as-function.\n  // Render in that case still occurs, but it doesn't produce the expected result.\n  warn(\n    !(hasAreaComponents && !hasChildrenFunction),\n    `Failed to render 'Composition' with template areas [\"${Object.keys(\n      areaComponents,\n    ).join(\n      '\", \"',\n    )}\"]: expected children to be a function, but got: ${childrenType}. Please provide render function as children, or remove assigned template props.`,\n  )\n\n  return (\n    <CompositionWrapper {...restProps}>\n      {hasAreaComponents && hasChildrenFunction\n        ? (children as ChildrenFunction)(areaComponents)\n        : children}\n    </CompositionWrapper>\n  )\n}\n\nexport default Composition\n","import { Breakpoint } from '@const/defaultOptions'\nimport getPrefix from '@utils/strings/getPrefix'\n\n/**\n * Accepts a breakpoint and returns a new breakpoint where\n * all the \"min\" properties of the original breakpoint are\n * flipped into the \"max\" properties. Any \"max\" properties\n * of the original breakpoint are omitted.\n *\n * @example\n * flipBreakpoint({ minWidth: 500, maxWidth: 600 })\n * // { maxWidth: 499 }\n */\nexport default function flipBreakpoint(breakpoint: Breakpoint): Breakpoint {\n  return Object.entries(breakpoint)\n    .map(([propName, propValue]) => [getPrefix(propName), propName, propValue])\n    .filter(([prefix]) => prefix !== 'max')\n    .reduce<Breakpoint>((newBreakpoint, [prefix, propName, propValue]) => {\n      const hasMinPrefix = prefix === 'min'\n      const nextPropName = hasMinPrefix\n        ? propName.replace(/^min/, 'max')\n        : propName\n\n      /**\n       * Subtracts 1 from the edge to not include the area at the beginning\n       * of the breakpoint.\n       *\n       * @todo\n       * How is \"parseFloat\" going to work with non-dimensional options?\n       * (i.e. aspectRatio)\n       */\n      const nextValue = hasMinPrefix\n        ? parseFloat(String(propValue)) - 1\n        : propValue\n\n      return {\n        ...newBreakpoint,\n        [nextPropName]: nextValue,\n      }\n    }, {})\n}\n","export { default } from './closeBreakpoint'\nexport * from './closeBreakpoint'\n","import * as React from 'react'\nimport Layout from '../Layout'\nimport Box from './Box'\nimport { Breakpoint } from '@const/defaultOptions'\nimport { GenericProps } from '@const/props'\nimport { withPlaceholder } from '@utils/templates/generateComponents'\nimport openBreakpoint from '@utils/breakpoints/openBreakpoint'\nimport closeBreakpoint from '@utils/breakpoints/closeBreakpoint'\nimport mergeBreakpoints from '@utils/breakpoints/mergeBreakpoints'\n\nexport type BreakpointRef = string | Breakpoint\n\nexport interface OnlyProps extends GenericProps {\n  /**\n   * Renders children only at the specified breakpoint.\n   */\n  for?: BreakpointRef\n  /**\n   * Renders children from the specified breakpoint and up,\n   * unless enclosing `to` prop is set to form a range.\n   */\n  from?: BreakpointRef\n  /**\n   * Renders children from the specified breakpoint and down,\n   * unless the openning `from` prop is set to form a range.\n   */\n  to?: BreakpointRef\n  /**\n   * Renders children everywhere except the given breakpoint range.\n   */\n  except?: boolean\n}\n\nconst resolveBreakpoint = (breakpointRef: BreakpointRef): Breakpoint => {\n  return typeof breakpointRef === 'string'\n    ? Layout.getBreakpoint(breakpointRef)\n    : breakpointRef\n}\n\nconst createWrapper = (children: React.ReactNode, props: GenericProps) => (\n  ...breakpoints: Breakpoint[]\n) => {\n  const Placeholder = withPlaceholder(Box, breakpoints)\n  return <Placeholder {...props}>{children}</Placeholder>\n}\n\nconst Only = ({\n  children,\n  except,\n  for: exactBreakpointName,\n  from: minBreakpointName,\n  to: maxBreakpointName,\n  ...restProps\n}: { children: any } & OnlyProps): JSX.Element => {\n  const wrapWith = createWrapper(children, restProps)\n\n  /* Render on explicit breakpoint */\n  if (exactBreakpointName) {\n    return wrapWith(resolveBreakpoint(exactBreakpointName))\n  }\n\n  const minBreakpoint = resolveBreakpoint(minBreakpointName)\n  const maxBreakpoint = resolveBreakpoint(maxBreakpointName)\n\n  /* Bell, __/--\\__ */\n  if (minBreakpoint && maxBreakpoint && !except) {\n    return wrapWith(\n      mergeBreakpoints(\n        { behavior: 'down', ...maxBreakpoint },\n        { behavior: 'up', ...minBreakpoint },\n        false,\n      ),\n    )\n  }\n\n  /* Notch, --\\__/-- */\n  if (minBreakpoint && maxBreakpoint && except) {\n    return wrapWith(\n      closeBreakpoint(minBreakpoint),\n      openBreakpoint(maxBreakpoint),\n    )\n  }\n\n  /* High-pass, __/-- */\n  if (minBreakpoint && !maxBreakpoint) {\n    return wrapWith(openBreakpoint(minBreakpoint))\n  }\n\n  /* Low-pass, --\\__ */\n  if (!minBreakpoint && maxBreakpoint) {\n    return wrapWith(closeBreakpoint(maxBreakpoint))\n  }\n\n  /* Render always when no constrains are provided */\n  return children\n}\n\nexport default Only\n","export default function debounce(\n  func: (...args: any[]) => any,\n  duration: number = 250,\n) {\n  let timeout: number\n\n  return (...args: any[]) => {\n    const postpone = () => {\n      timeout = null\n      return func(...args)\n    }\n\n    clearTimeout(timeout)\n    timeout = setTimeout(postpone, duration)\n  }\n}\n","import { useEffect } from 'react'\nimport debounce from '@utils/functions/debounce'\n\n/**\n * Executes a given callback on debounced window resize.\n */\nconst useViewportChange = (callback: () => void, debounceDuration?: number) => {\n  const handleWindowResize = debounce(callback, debounceDuration)\n\n  useEffect(() => {\n    handleWindowResize()\n    window.addEventListener('resize', handleWindowResize)\n    return () => window.removeEventListener('resize', handleWindowResize)\n  }, [])\n}\n\nexport default useViewportChange\n","import Layout from '@src/Layout'\nimport { Breakpoints } from '@src/const/defaultOptions'\nimport createMediaQuery from '@utils/styles/createMediaQuery'\nimport useViewportChange from './useViewportChange'\n\nconst useBreakpointChange = (\n  callback: (breakpointName: string) => void,\n  debounceDuration?: number,\n  breakpoints: Breakpoints = Layout.breakpoints,\n) => {\n  let prevBreakpointName: string\n\n  useViewportChange(() => {\n    const nextBreakpointName = Object.keys(breakpoints).find(\n      (breakpointName) => {\n        const mediaQuery = createMediaQuery(breakpoints[breakpointName], 'only')\n        return matchMedia(mediaQuery).matches\n      },\n    )\n\n    if (prevBreakpointName !== nextBreakpointName) {\n      callback(nextBreakpointName)\n      prevBreakpointName = nextBreakpointName\n    }\n  })\n}\n\nexport default useBreakpointChange\n","import Layout from '@src/Layout'\nimport { Breakpoints } from '@const/defaultOptions'\nimport createMediaQuery from '@utils/styles/createMediaQuery'\n\nconst createWithBreakpoints = (breakpoints: Breakpoints) => {\n  const existingBreakpoints = Object.keys(breakpoints)\n\n  return <T>(breakpointsMap: Record<string, T>, defaultValue?: T): T => {\n    const breakpointMatch = Object.keys(breakpointsMap)\n      .filter((breakpointName) => {\n        const hasBreakpoint = existingBreakpoints.includes(breakpointName)\n\n        if (!hasBreakpoint) {\n          console.warn(\n            'useBreakpoints: Breakpoint \"%s\" is not found. Add it via \"Layout.configure()\", or use one of the existing breakpoints (%s).',\n            breakpointName,\n            existingBreakpoints.join(', '),\n          )\n        }\n\n        return hasBreakpoint\n      })\n      .find((breakpointName) => {\n        const breakpoint: Breakpoints | undefined = breakpoints[breakpointName]\n        const mediaQuery = createMediaQuery(breakpoint, 'only')\n        return breakpoint && matchMedia(mediaQuery).matches\n      })\n\n    return breakpointMatch ? breakpointsMap[breakpointMatch] : defaultValue\n  }\n}\n\nconst withBreakpoints = createWithBreakpoints(Layout.breakpoints)\n\nexport default withBreakpoints\n","export { default } from './withBreakpoints'\nexport * from './withBreakpoints'\n","import { useState } from 'react'\nimport useBreakpointChange from './useBreakpointChange'\nimport withBreakpoints from '@utils/breakpoints/withBreakpoints'\n\n/**\n * Accepts a map of { breakpointName: value } pairs\n * and returns a value based on the current viewport.\n * Returns default value when no matching pair is found.\n */\nconst useResponsiveValue = <T>(\n  breakpoints: Record<string, T>,\n  defaultValue?: T,\n): T => {\n  const [value, updateValue] = useState<T>(defaultValue)\n\n  useBreakpointChange(() => {\n    const nextValue = withBreakpoints<T>(breakpoints, defaultValue)\n    updateValue(nextValue)\n  })\n\n  return value\n}\n\nexport default useResponsiveValue\n","import { useState } from 'react'\nimport Layout from '@src/Layout'\nimport useBreakpointChange from './useBreakpointChange'\nimport parsePropName from '@utils/strings/parsePropName'\nimport createMediaQuery from '@utils/styles/createMediaQuery'\n\n/**\n * Accepts an object of responsive props and returns\n * an object of props relative to the current viewport.\n */\nconst useResponsiveProps = <ResponsiveProps = {}>(\n  responsiveProps: ResponsiveProps,\n) => {\n  const [props, setProps] = useState({})\n\n  useBreakpointChange(() => {\n    const relevantProps = Object.keys(responsiveProps)\n      .map(parsePropName)\n      .filter(({ breakpoint, behavior }) => {\n        const mediaQuery = createMediaQuery(\n          Layout.breakpoints[breakpoint.name],\n          behavior,\n        )\n        return matchMedia(mediaQuery).matches\n      })\n      .reduce(\n        (acc, { originPropName, purePropName }) => ({\n          ...acc,\n          [purePropName]: responsiveProps[originPropName],\n        }),\n        {},\n      )\n\n    setProps(relevantProps)\n  })\n\n  return props\n}\n\nexport default useResponsiveProps\n","import Layout from './Layout'\nexport default Layout\n\n/* Components */\nexport { default as Box } from '@components/Box'\nexport { default as Composition } from '@components/Composition'\nexport { default as Only } from '@components/Only'\nexport { default as MediaQuery } from '@components/MediaQuery'\n\n/* Hooks */\nexport { default as useViewportChange } from './hooks/useViewportChange'\nexport { default as useResponsiveValue } from './hooks/useResponsiveValue'\nexport { default as useBreakpointChange } from './hooks/useBreakpointChange'\nexport { default as useResponsiveProps } from './hooks/useResponsiveProps'\n\n/* Utils */\nexport { default as withBreakpoints } from '@utils/breakpoints/withBreakpoints'\n"],"sourceRoot":""}